{"mappings":"AAAA,MAAM,KAAK,GAAG;IAEV,aAAa,EAAE,CAAC,GAAG,EAAE,KAAK,EAAK,GAAA,QAAQ,GAAK;QACxC,IAAI,OAAO,GAAG,KAAK,UAAU,EACzB,OAAO,GAAG,CAAC,KAAK,CAAC,CAAA;QAErB,MAAM,OAAO,GAAG;YAAC,GAAG;YAAE,KAAK,EAAE;gBAAC,GAAG,KAAK;gBAAE,QAAQ;aAAC;SAAC;QAClD,OAAO,OAAO,CAAA;KACjB;CACJ;AAED,IAAI,MAAM,GAAG,EAAE;AACf,IAAI,WAAW,GAAG,CAAC;AAEnB,MAAM,QAAQ,GAAG,CAAC,YAAY,GAAK;IAC/B,MAAM,MAAM,GAAG,WAAW,AAAC;IAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,YAAY;IAC/C,MAAM,QAAQ,GAAG,CAAA,QAAQ,GAAI;QACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;QAC1B,QAAQ,EAAE,CAAC;KACd;IACD,WAAW,EAAE,CAAC;IACd,OAAO;QAAC,MAAM,CAAC,MAAM,CAAC;QAAE,QAAQ;KAAC,CAAC;CACrC;AAED,MAAM,GAAG,GAAG,IAAM;IACd,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC;IACzC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;IACrC,qBAAQ,oBAAC,KAAG;QAAC,SAAS,EAAE,WAAW;;;;;;;qBAC/B,oBAAC,IAAE;;;;;;;OAAC,QAAM,EAAC,IAAI,CAAM,gBACrB,oBAAC,OAAK;QAAC,KAAK,EAAE,IAAI;QAAG,WAAW,EAAE,MAAM;QAAE,QAAQ,EAAE,CAAA,CAAC,GAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAAA;;;;;;;MAAG,gBAEnF,oBAAC,IAAE;;;;;;;OAAE,KAAK,CAAM,gBAChB,oBAAC,QAAM;QAAC,OAAO,EAAE,IAAM,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;QAAA;;;;;;;OAAE,GAAC,CAAS,gBACtD,oBAAC,QAAM;QAAC,OAAO,EAAE,IAAM,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;QAAA;;;;;;;OAAE,GAAC,CAAS,gBACtD,oBAAC,GAAC;;;;;;;OAAC,kPAMH,CAAI,CACF,CAAC;CACV,AAAC;AAGF,MAAM,MAAM,GAAG,CAAC,YAAY,EAAE,SAAS,GAAK;IACxC,IAAI;QAAC,QAAQ;QAAE,QAAQ;KAAC,CAAC,QAAQ,CAAC,OAAO,YAAY,CAAC,EAAE;QACpD,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAC5D,OAAM;KACT;IACD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC;IACjE,IAAI,YAAY,CAAC,KAAK,EAClB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAA,CAAC,GAAI,CAAC,KAAK,UAAU;IAAA,CAAC,CAAC,OAAO,CAAC,CAAA,CAAC,GACnE,gBAAgB,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAAA,CAC9C;IAEL,IAAI,YAAY,CAAC,KAAK,CAAC,QAAQ,EAC3B,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC,GAAI,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC;IAAA,CAAC;IAEzE,SAAS,CAAC,WAAW,CAAC,gBAAgB,CAAC;CAC1C;AAED,MAAM,QAAQ,GAAG,IAAM;IACnB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE;IACnD,WAAW,GAAG,CAAC;IACf,MAAM,eAAC,oBAAC,GAAG;;;;;;;MAAE,EAAE,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;CAElD;AAED,MAAM,eAAC,oBAAC,GAAG;;;;;;;EAAE,EAAE,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC","sources":["index.tsx"],"sourcesContent":["const React = {\n\n    createElement: (tag, props, ...children) => {\n        if (typeof tag === 'function') {\n            return tag(props)\n        }\n        const element = {tag, props: {...props, children}}\n        return element\n    }\n}\n\nlet states = []\nlet stateCursor = 0\n\nconst useState = (initialState) => {\n    const CURSOR = stateCursor;\n    states[CURSOR] = states[CURSOR] || initialState\n    const setState = newState => {\n        console.log(states)\n        states[CURSOR] = newState;\n        rerender();\n    }\n    stateCursor++;\n    return [states[CURSOR], setState];\n}\n\nconst App = () => {\n    const [name, setName] = useState('React')\n    const [count, setCount] = useState(0)\n    return (<div className={\"container\"}>\n        <h1>Hello {name}</h1>\n        <input value={name}  placeholder={\"Name\"} onchange={e => setName(e.target.value)}/>\n\n        <h2>{count}</h2>\n        <button onclick={() => setCount(count + 1)}>+</button>\n        <button onclick={() => setCount(count - 1)}>-</button>\n        <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n            Accusamus delectus dignissimos dolorem dolores eum,\n            mollitia nulla praesentium similique sint veritatis? Animi\n            architecto aut harum libero necessitatibus quae,\n            quam saepe temporibus?\n        </p>\n    </div>)\n};\n\n\nconst render = (reactElement, container) => {\n    if ([\"string\", \"number\"].includes(typeof reactElement)) {\n        container.appendChild(document.createTextNode(reactElement))\n        return\n    }\n    const actualDomElement = document.createElement(reactElement.tag)\n    if (reactElement.props) {\n        Object.keys(reactElement.props).filter(c => c !== 'children').forEach(p =>\n            actualDomElement[p] = reactElement.props[p]\n        )\n    }\n    if (reactElement.props.children) {\n        reactElement.props.children.forEach(c => render(c, actualDomElement))\n    }\n    container.appendChild(actualDomElement)\n}\n\nconst rerender = () => {\n    document.querySelector('#root').firstChild.remove()\n    stateCursor = 0\n    render(<App/>, document.querySelector('#root'))\n\n}\n\nrender(<App/>, document.querySelector('#root'))\n\n"],"names":[],"version":3,"file":"index.ad9a7e97.js.map","sourceRoot":"/__parcel_source_root/"}